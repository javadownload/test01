***  pull --> commit and push   ***



https://git-scm.com/book/ko/v2


1.github에 로그인  gitrepository 생성   .gitignore 생성 선택한다. 주의
   .gitignore  ==>  수정한다.
  
   생성url :  https://github.com/javacan/java_1.git


2. 이클립스에서 clone git repository한다.
   퍼스펙티브 git => clone git repository => https://github.com/javacan/java_1.git 등록

                                        destnation : C:\git\java_1
					이클립스에서 destnation을 워크스페이스로 설정 
					인코딩 utf-8 설정  => web
        
        git repository의 내용이 로컬로 pull 되면서 이때  destnation 인 C:\git\java_1
	이 폴더가 git 이 관리하는 폴더가 된다. .git이 생성되어 있다.


        문제점 해결 : .gitignor 수정  /bin/ 후 => addindex => commit 한다

3. 이클립스에서 워크스페이스를 git 관리 폴더로 바꾼다.

4. 프로젝트 생성 관리한다.
   java prj 생성
   dynamic prj 생성

5. 도스창이용 git 관리 폴더에서 관리 가능 
6. git 퍼스펙티브 열어서 관리가능
   ==> dos창  git 창 비교하면서 설명


	. 퍼스펙티브 git 선택후 git 스테이징 
	       =>  git 스테이징 에서 => unstaged changed ~~ 목록 확인 가능 
	       => ++ 버튼클릭 모두 index 목록에 등록 
	       =>  git 스테이징 에서 => staged changed ~~ 등록된 목록 확인 

	. commit message 창에  메세지등록후 => commit and push 버튼 클릭 
	       id/pw 입력하면 
	       pushed 메세지확인  , 등록 된 것을 확인 할수 있다.  
	       문제 bin 도 등록됨 


6. team 메뉴 이용하여 git 관리할수 있다.




7. 연결 해제 : Team/disconnect

pull-> work 작업 -> commit -> pull -> push 한다.



pull-> work 작업 -> commit -> pull -> push 한다.


***********************************************************************
협업시 이클립스에서 clone git repository 해서 가지고온다.
작업후 commit하기 전에 pull 확인한후 => commit 

clone git repository 해서 가지고온후 git 화면 working tree에서 import명령 finish 한다.  


working tree가 local repository 를 의미하며 여기서 직접 자바코딩이 어려우므로 import하여 javaee 화면에서 작업하는것
바로 working tree와 local repository 동기화되며 여기서 pull 후  => add index 명령으로 작업가능 

github에서 직접 파일 수정후 => commit
github에서 직접 파일 생성후 => commit







$ git config --global user.name herena68      //사용자 정보 등록 한번반

$ git config --global user.email herena68@naver.com

$ git commit    //i -> 1 입력후 esc :wq 로 저장한다.   commit message 등록

$ git commit -m "commit message 등록" 


폴더 / 속성 /공유
주의  :  파일공유시 / 제어판/def-방화벽 / 개인네트워크로연결되어야함  / 공용이면 파일공유 안됨 